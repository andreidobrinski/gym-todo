{"version":3,"sources":["helper.ts","TodosContext.tsx","AddItem.tsx","assets/TrashIcon.tsx","EditTodo.tsx","assets/CheckmarkIcon.tsx","TodoItem.tsx","TodoList.tsx","assets/Logo.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["getDiffDays","completedDate","currentDate","Date","getTime","Math","round","abs","TodosContext","createContext","TodosContextProvider","children","useState","todos","setTodos","selectedTodo","setSelectedTodo","useEffect","storeTodos","store","get","set","completedTodos","map","todo","dateCompleted","complete","sortedByCompletion","sort","a","b","addTodo","useCallback","id","newTodos","title","toggleTodo","isCompleted","deleteTodo","filter","value","useMemo","Provider","AddItem","useContext","setValue","adding","setAdding","error","setError","duplicateTodo","find","Wrap","onChange","e","target","type","aria-label","Button","onClick","disabled","cancel","styled","section","button","attrs","props","TrashIcon","xmlns","width","height","viewBox","role","d","EditTodo","getDaysUntilReset","diffDays","div","CheckmarkIcon","TodoItem","item","isSelected","isComplete","CheckButton","aria-pressed","TodoButton","li","TodoList","List","key","ul","Logo","size","fill","clipPath","x1","y1","x2","y2","stroke","strokeWidth","strokeLinecap","strokeOpacity","x","y","filterUnits","colorInterpolationFilters","floodOpacity","result","in","values","dy","stdDeviation","mode","in2","operator","k2","k3","App","Outer","Inner","Header","Main","Footer","href","main","header","footer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.e5405e1c.chunk.js","sourcesContent":["export const getDiffDays = (completedDate: number) => {\n  const currentDate = new Date().getTime();\n  const millisecondDay = 24 * 60 * 60 * 1000;\n  const diffDays = Math.round(\n    Math.abs(completedDate - currentDate) / millisecondDay\n  );\n  return diffDays;\n};\n","import React, {\n  createContext,\n  useMemo,\n  useState,\n  useEffect,\n  useCallback,\n} from 'react';\nimport store from 'store';\nimport { ITodo } from './ITodo';\nimport { getDiffDays } from './helper';\n\ninterface TodosContextProps {\n  children: JSX.Element;\n}\n\ninterface ITodosContext {\n  todos: ITodo[];\n  setTodos: Function;\n  selectedTodo: string;\n  setSelectedTodo: Function;\n  addTodo: Function;\n  deleteTodo: Function;\n  toggleTodo: Function;\n}\n\nexport const TodosContext = createContext({} as ITodosContext);\n\nexport const TodosContextProvider = ({ children }: TodosContextProps) => {\n  const [todos, setTodos] = useState<ITodo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState('');\n\n  useEffect(() => {\n    const storeTodos = store.get('todos');\n    if (!storeTodos) {\n      return store.set('todos', todos);\n    }\n    const completedTodos = storeTodos.map((todo: ITodo) => {\n      if (!todo.dateCompleted) return todo;\n      const diffDays = getDiffDays(new Date(todo.dateCompleted).getTime());\n\n      if (diffDays >= 7)\n        return {\n          ...todo,\n          dateCompleted: null,\n          complete: false,\n        };\n      return todo;\n    });\n    const sortedByCompletion = [...completedTodos].sort(\n      (a: ITodo, b: ITodo) => {\n        if (a.complete === b.complete) return 0;\n        return a.complete ? 1 : -1;\n      }\n    );\n    store.set('todos', sortedByCompletion);\n    return setTodos(sortedByCompletion);\n    // eslint-disable-next-line\n  }, []);\n\n  const addTodo = useCallback(\n    (id: string) => {\n      const newTodos = [\n        ...todos,\n        { title: id, complete: false, dateCompleted: null },\n      ];\n      setTodos(newTodos);\n      store.set('todos', newTodos);\n    },\n    [todos]\n  );\n\n  const toggleTodo = useCallback(\n    (id: string) => {\n      const newTodos = todos.map((todo: ITodo) => {\n        if (todo.title === id) {\n          const isCompleted = todo.complete;\n          return {\n            ...todo,\n            complete: !isCompleted,\n            dateCompleted: isCompleted ? null : new Date(),\n          };\n        }\n        return todo;\n      });\n      setTodos(newTodos);\n      store.set('todos', newTodos);\n    },\n    [todos]\n  );\n\n  const deleteTodo = useCallback(\n    (id: string) => {\n      const newTodos = todos.filter((todo: ITodo) => todo.title !== id);\n      setTodos(newTodos);\n      store.set('todos', newTodos);\n    },\n    [todos]\n  );\n\n  const value: ITodosContext = useMemo(() => {\n    return {\n      todos,\n      setTodos,\n      selectedTodo,\n      setSelectedTodo,\n      addTodo,\n      toggleTodo,\n      deleteTodo,\n    };\n  }, [todos, selectedTodo, addTodo, toggleTodo, deleteTodo]);\n\n  return (\n    <TodosContext.Provider value={value}>{children}</TodosContext.Provider>\n  );\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport styled from 'styled-components';\nimport { TodosContext } from './TodosContext';\nimport { ITodo } from './ITodo';\n\nexport const AddItem = () => {\n  const { todos, addTodo, selectedTodo, setSelectedTodo } = useContext(\n    TodosContext\n  );\n  const [value, setValue] = useState('');\n  const [adding, setAdding] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (selectedTodo) {\n      setAdding(false);\n    }\n  }, [selectedTodo]);\n\n  useEffect(() => {\n    const duplicateTodo = todos.find((todo: ITodo) => todo.title === value);\n    if (duplicateTodo) {\n      setError(true);\n    }\n    if (error && !duplicateTodo) {\n      setError(false);\n    }\n  }, [error, value, todos]);\n\n  if (!adding)\n    return (\n      <Wrap>\n        <Button\n          onClick={() => {\n            setAdding(true);\n            setSelectedTodo('');\n          }}\n        >\n          Add Todo\n        </Button>\n      </Wrap>\n    );\n\n  return (\n    <Wrap>\n      <input\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n        type=\"text\"\n        aria-label=\"add new todo\"\n      />\n      {error ? (\n        <div>Todo already exists</div>\n      ) : (\n        <Button\n          onClick={() => {\n            addTodo(value);\n            setValue('');\n            setAdding(false);\n          }}\n          disabled={value === ''}\n        >\n          Add\n        </Button>\n      )}\n      <Button onClick={() => setAdding(false)} cancel>\n        Cancel\n      </Button>\n    </Wrap>\n  );\n};\n\nconst Wrap = styled.section`\n  display: flex;\n  flex-direction: column;\n  margin-right: auto;\n  margin-top: 16px;\n  input {\n    font-size: 18px;\n    padding: 8px;\n    border-radius: 8px;\n    border: 1px solid var(--bg);\n  }\n`;\n\ninterface IButton {\n  cancel: boolean;\n}\n\nconst Button = styled.button.attrs(({ cancel }: IButton) => ({\n  type: 'button',\n  cancel,\n}))`\n  padding: 8px 16px;\n  margin-top: 8px;\n  ${(props) =>\n    props.cancel &&\n    `\n      margin-top: 4px;\n      background-color: transparent;\n  `};\n`;\n","import React from 'react';\n\nexport const TrashIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    role=\"img\"\n  >\n    <title>delete</title>\n    <path d=\"M3 6l3 18h12l3-18h-18zm19-4v2h-20v-2h5.711c.9 0 1.631-1.099 1.631-2h5.316c0 .901.73 2 1.631 2h5.711z\" />\n  </svg>\n);\n","import React, { useContext, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { TodosContext } from './TodosContext';\nimport { ITodo } from './ITodo';\nimport { TrashIcon } from './assets/TrashIcon';\nimport { getDiffDays } from './helper';\n\ninterface EditTodoProps {\n  todo: ITodo;\n}\n\nexport const EditTodo = ({ todo }: EditTodoProps) => {\n  const { deleteTodo } = useContext(TodosContext);\n\n  const getDaysUntilReset = useCallback(() => {\n    if (!todo.dateCompleted) return null;\n    const daysUntilReset = 7;\n    const daysCompleted = getDiffDays(new Date(todo.dateCompleted).getTime());\n    const diffDays = daysUntilReset - daysCompleted;\n    return <p>Resets in {diffDays} days</p>;\n  }, [todo.dateCompleted]);\n\n  return (\n    <Wrap>\n      <button\n        onClick={() => deleteTodo(todo.title)}\n        type=\"button\"\n        aria-label={`delete ${todo.title}`}\n      >\n        <TrashIcon />\n        &nbsp;Delete\n      </button>\n      {getDaysUntilReset()}\n    </Wrap>\n  );\n};\n\nconst Wrap = styled.div`\n  display: flex;\n  align-items: center;\n  margin-top: 8px;\n  grid-column: 2;\n  svg {\n    margin-bottom: 2px;\n  }\n  button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    font-size: 16px;\n  }\n  p {\n    color: rgba(0, 0, 0, 0.75);\n    font-size: 16px;\n    margin: 0 8px;\n  }\n`;\n","import React from 'react';\n\nexport const CheckmarkIcon = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"16\"\n    height=\"16\"\n    viewBox=\"0 0 24 24\"\n    role=\"img\"\n  >\n    <title>checkmark</title>\n    <path d=\"M9 21.035l-9-8.638 2.791-2.87 6.156 5.874 12.21-12.436 2.843 2.817z\" />\n  </svg>\n);\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { TodosContext } from './TodosContext';\nimport { ITodo } from './ITodo';\nimport { EditTodo } from './EditTodo';\nimport { CheckmarkIcon } from './assets/CheckmarkIcon';\n\ninterface TodoItemProps {\n  id: string;\n}\n\nexport const TodoItem = ({ id }: TodoItemProps) => {\n  const { todos, selectedTodo, setSelectedTodo, toggleTodo } = useContext(\n    TodosContext\n  );\n\n  const todo = todos.find((item: ITodo) => item.title === id);\n\n  if (!todo) return null;\n\n  const isSelected = id === selectedTodo;\n  const isComplete = todo.complete;\n\n  return (\n    <Wrap>\n      <CheckButton\n        onClick={() => toggleTodo(id)}\n        aria-label={`checkbox for ${id}`}\n        aria-pressed={isComplete}\n      >\n        {isComplete && <CheckmarkIcon />}\n      </CheckButton>\n      <TodoButton\n        onClick={() => (isSelected ? setSelectedTodo('') : setSelectedTodo(id))}\n        isComplete={isComplete}\n        aria-label={`${id} ${isComplete ? 'complete' : 'incomplete'}`}\n        aria-pressed={isSelected}\n      >\n        {todo.title}\n      </TodoButton>\n      {isSelected && <EditTodo todo={todo} />}\n    </Wrap>\n  );\n};\n\nconst Wrap = styled.li`\n  margin: 4px 0;\n  display: grid;\n  grid-template-columns: 37px 1fr;\n  align-items: center;\n`;\n\nconst CheckButton = styled.button.attrs(() => ({\n  type: 'button',\n}))`\n  border-radius: 50%;\n  width: 37px;\n  height: 37px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\ninterface ITodoButton {\n  isComplete: boolean;\n}\n\nconst TodoButton = styled.button.attrs(({ isComplete }: ITodoButton) => ({\n  type: 'button',\n  isComplete,\n}))`\n  background-color: transparent;\n  text-decoration: ${(props) => props.isComplete && 'line-through'};\n  text-align: left;\n`;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { TodoItem } from './TodoItem';\nimport { ITodo } from './ITodo';\nimport { TodosContext } from './TodosContext';\n\nexport const TodoList = () => {\n  const { todos } = useContext(TodosContext);\n\n  return (\n    <List>\n      {todos.map((todo: ITodo) => (\n        <TodoItem id={todo.title} key={todo.title} />\n      ))}\n    </List>\n  );\n};\n\nconst List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  list-style: none;\n  padding: 0;\n  margin: 0;\n`;\n","import React from 'react';\n\ninterface LogoProps {\n  size?: number;\n}\n\nexport const Logo = ({ size = 512 }: LogoProps) => (\n  <svg\n    width={size}\n    height={size}\n    viewBox=\"0 0 512 512\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <g clipPath=\"url(#clip0)\">\n      <g filter=\"url(#filter0_di)\">\n        <line\n          x1=\"66.2843\"\n          y1=\"270\"\n          x2=\"179.421\"\n          y2=\"383.137\"\n          stroke=\"black\"\n          strokeWidth=\"40\"\n          strokeLinecap=\"round\"\n        />\n        <line\n          x1=\"378.843\"\n          y1=\"128.853\"\n          x2=\"435.411\"\n          y2=\"185.421\"\n          stroke=\"black\"\n          strokeOpacity=\"0.5\"\n          strokeWidth=\"40\"\n          strokeLinecap=\"round\"\n        />\n        <line\n          x1=\"329.345\"\n          y1=\"150.066\"\n          x2=\"414.198\"\n          y2=\"234.919\"\n          stroke=\"black\"\n          strokeOpacity=\"0.5\"\n          strokeWidth=\"40\"\n          strokeLinecap=\"round\"\n        />\n        <line\n          x1=\"279.848\"\n          y1=\"171.279\"\n          x2=\"392.985\"\n          y2=\"284.416\"\n          stroke=\"black\"\n          strokeOpacity=\"0.5\"\n          strokeWidth=\"40\"\n          strokeLinecap=\"round\"\n        />\n        <line\n          x1=\"180.853\"\n          y1=\"383.411\"\n          x2=\"435.411\"\n          y2=\"128.853\"\n          stroke=\"black\"\n          strokeWidth=\"40\"\n          strokeLinecap=\"round\"\n        />\n      </g>\n    </g>\n    <defs>\n      <filter\n        id=\"filter0_di\"\n        x=\"30\"\n        y=\"100.569\"\n        width=\"441.696\"\n        height=\"327.127\"\n        filterUnits=\"userSpaceOnUse\"\n        colorInterpolationFilters=\"sRGB\"\n      >\n        <feFlood floodOpacity=\"0\" result=\"BackgroundImageFix\" />\n        <feColorMatrix\n          in=\"SourceAlpha\"\n          type=\"matrix\"\n          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n        />\n        <feOffset dy=\"8\" />\n        <feGaussianBlur stdDeviation=\"4\" />\n        <feColorMatrix\n          type=\"matrix\"\n          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"\n        />\n        <feBlend\n          mode=\"normal\"\n          in2=\"BackgroundImageFix\"\n          result=\"effect1_dropShadow\"\n        />\n        <feBlend\n          mode=\"normal\"\n          in=\"SourceGraphic\"\n          in2=\"effect1_dropShadow\"\n          result=\"shape\"\n        />\n        <feColorMatrix\n          in=\"SourceAlpha\"\n          type=\"matrix\"\n          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0\"\n          result=\"hardAlpha\"\n        />\n        <feOffset dy=\"8\" />\n        <feGaussianBlur stdDeviation=\"4\" />\n        <feComposite in2=\"hardAlpha\" operator=\"arithmetic\" k2=\"-1\" k3=\"1\" />\n        <feColorMatrix\n          type=\"matrix\"\n          values=\"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0\"\n        />\n        <feBlend mode=\"normal\" in2=\"shape\" result=\"effect2_innerShadow\" />\n      </filter>\n      <clipPath id=\"clip0\">\n        <rect width=\"512\" height=\"512\" fill=\"white\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\n","import React from 'react';\nimport styled from 'styled-components';\nimport { AddItem } from './AddItem';\nimport { TodoList } from './TodoList';\nimport { Logo } from './assets/Logo';\n\nexport const App = () => {\n  return (\n    <Outer>\n      <Inner>\n        <Header>\n          <Logo size={64} />\n          <h1>Gym Todo</h1>\n        </Header>\n        <Main>\n          <TodoList />\n          <AddItem />\n        </Main>\n        <Footer>\n          <a href=\"https://github.com/andreidobrinski/gym-todo\">Made</a> with{' '}\n          <span role=\"img\" aria-label=\"love\">\n            &#10084;&#65039;\n          </span>{' '}\n          by <a href=\"https://andreidobrinski.com\">Andrei Dobrinski</a>\n        </Footer>\n      </Inner>\n    </Outer>\n  );\n};\n\nconst Outer = styled.div`\n  background-color: var(--bg);\n  min-height: 100vh;\n  width: 100vw;\n  padding: 16px;\n`;\n\nconst Inner = styled.div`\n  display: flex;\n  flex-direction: column;\n  max-width: 600px;\n  margin: 0 auto;\n  height: 100%;\n  min-height: calc(100vh - 32px);\n`;\n\nconst Main = styled.main`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n  width: 100%;\n  padding: 16px;\n  border-radius: 8px;\n  background-color: var(--light-bg);\n`;\n\nconst Header = styled.header`\n  display: flex;\n  align-items: center;\n  margin: 0 auto 16px 0;\n  h1 {\n    margin: 0 0 0 16px;\n  }\n`;\n\nconst Footer = styled.footer`\n  max-width: 600px;\n  margin: auto 0 0 auto;\n  padding-top: 32px;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { TodosContextProvider } from './TodosContext';\n\nReactDOM.render(\n  <React.StrictMode>\n    <TodosContextProvider>\n      <App />\n    </TodosContextProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}